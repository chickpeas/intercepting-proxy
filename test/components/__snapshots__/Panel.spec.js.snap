// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InfoPanel component should render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <InfoPanel
    request={
      Object {
        "headers": "value",
      }
    }
    response={
      Object {
        "body": "value",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(IconButton)
          aria-label="close panel"
          className="closeButton"
          onClick={undefined}
        >
          <pure(Close) />
        </WithStyles(IconButton)>,
        <WithStyles(ExpansionPanel)>
          <WithStyles(ExpansionPanelSummary)
            expandIcon={<pure(ExpandMore) />}
          >
            <WithStyles(Typography)
              variant="subheading"
            >
              Request
            </WithStyles(Typography)>
          </WithStyles(ExpansionPanelSummary)>
          <WithStyles(ExpansionPanelDetails)>
            <span
              className="headers"
            >
              <span
                className="label"
              >
                headers
              </span>
              <span
                className="value"
              >
                value
              </span>
            </span>
          </WithStyles(ExpansionPanelDetails)>
        </WithStyles(ExpansionPanel)>,
        <WithStyles(ExpansionPanel)>
          <WithStyles(ExpansionPanelSummary)
            expandIcon={<pure(ExpandMore) />}
          >
            <WithStyles(Typography)
              variant="subheading"
            >
              Response
            </WithStyles(Typography)>
          </WithStyles(ExpansionPanelSummary)>
          <WithStyles(ExpansionPanelDetails)>
            <span
              className="body"
            >
              <span
                className="label"
              >
                body
              </span>
              <span
                className="value"
              >
                value
              </span>
            </span>
          </WithStyles(ExpansionPanelDetails)>
        </WithStyles(ExpansionPanel)>,
      ],
      "className": "infoContainer",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "aria-label": "close panel",
          "children": <pure(Close) />,
          "className": "closeButton",
          "onClick": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(ExpansionPanelSummary)
              expandIcon={<pure(ExpandMore) />}
            >
              <WithStyles(Typography)
                variant="subheading"
              >
                Request
              </WithStyles(Typography)>
            </WithStyles(ExpansionPanelSummary)>,
            <WithStyles(ExpansionPanelDetails)>
              <span
                className="headers"
              >
                <span
                  className="label"
                >
                  headers
                </span>
                <span
                  className="value"
                >
                  value
                </span>
              </span>
            </WithStyles(ExpansionPanelDetails)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(Typography)
                variant="subheading"
              >
                Request
              </WithStyles(Typography)>,
              "expandIcon": <pure(ExpandMore) />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Request",
                "variant": "subheading",
              },
              "ref": null,
              "rendered": "Request",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <span
                  className="headers"
                >
                  <span
                    className="label"
                  >
                    headers
                  </span>
                  <span
                    className="value"
                  >
                    value
                  </span>
                </span>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "headers",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span
                      className="label"
                    >
                      headers
                    </span>,
                    <span
                      className="value"
                    >
                      value
                    </span>,
                  ],
                  "className": "headers",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "headers",
                      "className": "label",
                    },
                    "ref": null,
                    "rendered": "headers",
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "value",
                      "className": "value",
                    },
                    "ref": null,
                    "rendered": "value",
                    "type": "span",
                  },
                ],
                "type": "span",
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(ExpansionPanelSummary)
              expandIcon={<pure(ExpandMore) />}
            >
              <WithStyles(Typography)
                variant="subheading"
              >
                Response
              </WithStyles(Typography)>
            </WithStyles(ExpansionPanelSummary)>,
            <WithStyles(ExpansionPanelDetails)>
              <span
                className="body"
              >
                <span
                  className="label"
                >
                  body
                </span>
                <span
                  className="value"
                >
                  value
                </span>
              </span>
            </WithStyles(ExpansionPanelDetails)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(Typography)
                variant="subheading"
              >
                Response
              </WithStyles(Typography)>,
              "expandIcon": <pure(ExpandMore) />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Response",
                "variant": "subheading",
              },
              "ref": null,
              "rendered": "Response",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <span
                  className="body"
                >
                  <span
                    className="label"
                  >
                    body
                  </span>
                  <span
                    className="value"
                  >
                    value
                  </span>
                </span>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "body",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span
                      className="label"
                    >
                      body
                    </span>,
                    <span
                      className="value"
                    >
                      value
                    </span>,
                  ],
                  "className": "body",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "body",
                      "className": "label",
                    },
                    "ref": null,
                    "rendered": "body",
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "value",
                      "className": "value",
                    },
                    "ref": null,
                    "rendered": "value",
                    "type": "span",
                  },
                ],
                "type": "span",
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(IconButton)
            aria-label="close panel"
            className="closeButton"
            onClick={undefined}
          >
            <pure(Close) />
          </WithStyles(IconButton)>,
          <WithStyles(ExpansionPanel)>
            <WithStyles(ExpansionPanelSummary)
              expandIcon={<pure(ExpandMore) />}
            >
              <WithStyles(Typography)
                variant="subheading"
              >
                Request
              </WithStyles(Typography)>
            </WithStyles(ExpansionPanelSummary)>
            <WithStyles(ExpansionPanelDetails)>
              <span
                className="headers"
              >
                <span
                  className="label"
                >
                  headers
                </span>
                <span
                  className="value"
                >
                  value
                </span>
              </span>
            </WithStyles(ExpansionPanelDetails)>
          </WithStyles(ExpansionPanel)>,
          <WithStyles(ExpansionPanel)>
            <WithStyles(ExpansionPanelSummary)
              expandIcon={<pure(ExpandMore) />}
            >
              <WithStyles(Typography)
                variant="subheading"
              >
                Response
              </WithStyles(Typography)>
            </WithStyles(ExpansionPanelSummary)>
            <WithStyles(ExpansionPanelDetails)>
              <span
                className="body"
              >
                <span
                  className="label"
                >
                  body
                </span>
                <span
                  className="value"
                >
                  value
                </span>
              </span>
            </WithStyles(ExpansionPanelDetails)>
          </WithStyles(ExpansionPanel)>,
        ],
        "className": "infoContainer",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "aria-label": "close panel",
            "children": <pure(Close) />,
            "className": "closeButton",
            "onClick": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(ExpansionPanelSummary)
                expandIcon={<pure(ExpandMore) />}
              >
                <WithStyles(Typography)
                  variant="subheading"
                >
                  Request
                </WithStyles(Typography)>
              </WithStyles(ExpansionPanelSummary)>,
              <WithStyles(ExpansionPanelDetails)>
                <span
                  className="headers"
                >
                  <span
                    className="label"
                  >
                    headers
                  </span>
                  <span
                    className="value"
                  >
                    value
                  </span>
                </span>
              </WithStyles(ExpansionPanelDetails)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <WithStyles(Typography)
                  variant="subheading"
                >
                  Request
                </WithStyles(Typography)>,
                "expandIcon": <pure(ExpandMore) />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Request",
                  "variant": "subheading",
                },
                "ref": null,
                "rendered": "Request",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <span
                    className="headers"
                  >
                    <span
                      className="label"
                    >
                      headers
                    </span>
                    <span
                      className="value"
                    >
                      value
                    </span>
                  </span>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "headers",
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <span
                        className="label"
                      >
                        headers
                      </span>,
                      <span
                        className="value"
                      >
                        value
                      </span>,
                    ],
                    "className": "headers",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "headers",
                        "className": "label",
                      },
                      "ref": null,
                      "rendered": "headers",
                      "type": "span",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "value",
                        "className": "value",
                      },
                      "ref": null,
                      "rendered": "value",
                      "type": "span",
                    },
                  ],
                  "type": "span",
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(ExpansionPanelSummary)
                expandIcon={<pure(ExpandMore) />}
              >
                <WithStyles(Typography)
                  variant="subheading"
                >
                  Response
                </WithStyles(Typography)>
              </WithStyles(ExpansionPanelSummary)>,
              <WithStyles(ExpansionPanelDetails)>
                <span
                  className="body"
                >
                  <span
                    className="label"
                  >
                    body
                  </span>
                  <span
                    className="value"
                  >
                    value
                  </span>
                </span>
              </WithStyles(ExpansionPanelDetails)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <WithStyles(Typography)
                  variant="subheading"
                >
                  Response
                </WithStyles(Typography)>,
                "expandIcon": <pure(ExpandMore) />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Response",
                  "variant": "subheading",
                },
                "ref": null,
                "rendered": "Response",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <span
                    className="body"
                  >
                    <span
                      className="label"
                    >
                      body
                    </span>
                    <span
                      className="value"
                    >
                      value
                    </span>
                  </span>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "body",
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <span
                        className="label"
                      >
                        body
                      </span>,
                      <span
                        className="value"
                      >
                        value
                      </span>,
                    ],
                    "className": "body",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "body",
                        "className": "label",
                      },
                      "ref": null,
                      "rendered": "body",
                      "type": "span",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "value",
                        "className": "value",
                      },
                      "ref": null,
                      "rendered": "value",
                      "type": "span",
                    },
                  ],
                  "type": "span",
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
